"" -- suggested options --
" show a few lines of context around the cursor. note that this makes the
" text scroll if you mouse-click near the start or end of the window.
set scrolloff=5

" do incremental searching.
set incsearch

let mapleader = " "
nmap <space> <leader>
" nnoremap <leader>u :Action showusages<cr>
" don't use ex mode, use q for formatting.
" map q gq

set clipboard+=unnamed
" --- enable ideavim plugins https://jb.gg/ideavim-plugins

plug 'machakann/vim-highlightedyank'
plug 'tpope/vim-commentary'
plug 'tpope/vim-surround'
plug 'preservim/nerdtree'

" plug
set surround

" idea stuff
set ideajoin
set idearefactormode=keep
set ideamarks

" diagnostics
map <leader>[ <Action>(GotoPreviousError)
map <leader>] <Action>(GotoNextError)

" bookmarks
map tm <Action>(ToggleBookmark)
map gn <Action>(GotoNextBookmarkInEditor)
map gp <Action>(GotoPreviousBookmarkInEditor)

" navigation
map <leader>gg <Action>(JumpToLastChange)

" search
map <leader>fc <Action>(GotoClass) " [F]ind [C]lasses
map <leader>ff <Action>(GotoFile) " [F]ind [F]iles
map <leader>fg <Action>(FindInPath) " [F]ind [G]lobally
map <leader>fa <Action>(GotoAction) " [F]ind [A]ction
map <leader>fs <Action>(GotoSymbol) " [F]ind [S]ymbol
map <leader>fr <Action>(RecentFiles) " [F]ind [R]ecent
map <leader>fd <Action>(HelpDiagnosticTools) " [F]ind [Dlesiagnostics
map <leader>ft <Action>(TextSearchAction) " [F]ind [T]ext (global)
map <leader>/ <Action>(Find) " [F]ind in [/] current buffer (local)

" run
map <leader>rr <Action>(Run)
map <leader>rt <Action>(RunClass)

" git
map <leader>gk <Action>(ActivateCommitToolWindow)
map <leader>gK <Action>(vcs.push)

" debug
map tb <Action>(ToggleLineBreakpoint)
" map <leader>dd <Action>(resume)
map <leader>dr <Action>(Debug)
map <leader>st <Action>(Stop)

" test
map <leader>gt <Action>(GotoTest)
map <leader>ct <Action>(GenerateTestMethod)

" lsp
map gd <Action>(GotoTypeDeclaration)
map gd <Action>(GotoDeclaration)
map gi <Action>(GotoImplementation)
map <leader>rn <Action>(RenameElement)

map <leader>fm <Action>(ReformatCode)<Action>(ReformatWithPrettierAction)
map <leader>oi <Action>(OptimizeImports)
map <leader>ev <Action>(IntroduceVariable)
map <leader>ec <Action>(IntroduceConstant)
map <leader>em <Action>(ExtractMethod)
map <leader>ef <Action>(IntroduceField)

map <leader>k <Action>(QuickJavadoc)
imap <c-s> <Action>(ParameterInfo)
map <c-s> <Action>(ParameterInfo)
map <leader>s <Action>(GotoSymbol)

map <leader><leader>t <Action>(VimFindActionId)
